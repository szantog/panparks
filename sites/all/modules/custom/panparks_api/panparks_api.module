<?php

/**
 * @file
 *   panparks_api.module
 * Project:panparks.org
 *    Api functions for panparks.org
 *
 * @developers:
 *    Gabor Szanto <hello@szantogabor.com>
 *    http://szantogabor.com
 *
 */

function panparks_api_action_info() {
  $actions = array();
  $actions['panparks_api_update_media'] = array(
    'type' => 'entity',
    'label' => t('Update media metadata'),
    'configurable' => FALSE,
  );
  $actions['panparks_api_fetch_img_id'] = array(
    'type' => 'entity',
    'label' => t('Fetch node id from img_assist code'),
    'configurable' => FALSE,
  );
  $actions['panparks_api_set_main_picture'] = array(
    'type' => 'entity',
    'label' => t('Set main picture or gallery'),
    'configurable' => FALSE,
  );
  return $actions;
}

/*
 * Helper function actualize media data after importing.
 */

function panparks_api_update_media($entity, $context) {
  $fid = $entity->field_image['und'][0]['fid'];
  $media = file_load($fid);
  if ($entity->title != 'photo') {
    $media->media_title['und'][0]['value'] = $entity->title;
  }
  if (!empty($entity->field_photographer)) {
    //@todo: need more transform?
    $photographer = str_replace('Photo:', '', $entity->field_photographer['und'][0]['value']);
    //$photographer = str_replace('Photo:', '', $$photographer);
    $media->field_photographer['und'][0]['value'] = $photographer;
  }
  if (!empty($entity->field_old_gallery_nid)) {
    $media->field_old_gallery_nid['und'][0]['value'] = $entity->field_old_gallery_nid['und'][0]['value'];
  }
  if (!empty($entity->field_old_tid)) {
    $media->field_old_tid['und'][0]['value'] = $entity->field_old_tid['und'][0]['value'];
  }
  $media->field_old_nid['und'][0]['value'] = $entity->field_old_nid['und'][0]['value'];
  if ($folder_term = taxonomy_get_term_by_name($entity->field_old_term_name['und'][0]['value'])) {
    foreach ($folder_term as $key => $value) {
      $folder_tid = $key;
    }
    $media->field_folder['und'][0]['tid'] = $folder_tid;
  }
  else $media->field_folder['und'][0]['tid'] = 24;
  file_save($media);
  //dsm(get_defined_vars());
}

/*
 * Helper function to get image nid from image assist code.
 */

function panparks_api_fetch_img_id($entity, $context) {
  $source = $entity->field_tmp_imgtext['und'][0]['value'];
  if (preg_match('/(nid=)([0-9]*)/', $source, $target)) {
    $entity->field_tmp_img_nid['und'][0]['value'] = $target[2];
    node_save($entity);
  }
}

/*
 * VBO operation function to set main picture
 */
function panparks_api_set_main_picture($entity, $context) {
  $entity_type = 'node';
  $old_nid = $entity->field_old_nid[LANGUAGE_NONE][0]['value'];
  $tmp_image = _panparks_api_get_tmp_main_picture_old_nid($old_nid, 'tmp_main_picture') ;

  if (isset($entity->media_gallery_media[$entity->language])) {
    $entity->media_gallery_media[$entity->language] = array();
  }

  if (isset($entity->field_image[$entity->language])) {
    $entity->field_image[$entity->language] = array();
  }

  if ($tmp_image_nid = $tmp_image[0]->entity_id) {
    $old_image = node_load($tmp_image_nid);
    if ($entity->type == 'media_gallery') {
      $image_old_nid = field_get_items($entity_type, $old_image, 'field_tmp_galleries_pics');
    }
    else {
      $image_old_nid = field_get_items($entity_type, $old_image, 'field_tmp_img_nid');
    }
    if ($image_old_nid[0]['value'] != '0') {
      foreach ($image_old_nid as $delta => $value) {
        $image_nid = _panparks_api_get_tmp_main_picture_old_nid($value, 'image') ;
        switch($entity->type) {
          case 'accommodation':
            $entity->field_image[$entity->language][0]['fid'] = $image_nid[0]->entity_id;
            break;
          case 'park':
            $entity->field_park_photo[$entity->language][0]['fid'] = $image_nid[0]->entity_id;
            break;
          case 'media_gallery':
            if (isset($old_image->field_tmp_galleries_pics[$old_image->language])) {
              $image_nid = _panparks_api_get_tmp_main_picture_old_nid($value, 'image') ;
              //foreach ($old_image->field_tmp_galleries_pics[$old_image->language] as $key => $new_img_nid) {
              $entity->media_gallery_media[$entity->language][$delta]['fid'] = $image_nid[0]->entity_id;
              //}
            }
            break;
          default:
            break;
        }
      }
    }
    //dsm(get_defined_vars());
    node_save($entity);
  }

}


/*
 * Helper function to get tmp_main_picture record, where old nid = original content's old_nid
 */
function _panparks_api_get_tmp_main_picture_old_nid($old_nid, $bundle) {
  $result = db_select('field_data_field_old_nid', 'o')
    ->fields('o', array('entity_id', 'entity_type', 'bundle', 'field_old_nid_value'))
    ->condition('o.field_old_nid_value', $old_nid, '=')
    ->condition(db_and()->condition('o.bundle', $bundle, '='));

  //dsm($result->__toString());
  $results = $result->execute();

  if (!empty($results)) {
    $return = array();
    foreach ($results as $record) {
      $return[] = $record;
    }
    return $return;
  }
}

/*
 * Helper function to get only addresse from geofield
 * It is used on views: park_additional_data
 * admin/structure/views/view/park_additional_data
 *
 * @param $item array
 *   The array of geofield value
 *
 * TMP DEPRICATED
 */
function panparks_api_get_addresse($item) {
  geofield_load_geophp();
  $geometry = geoPHP::load($item['wkt'], 'wkt');
  $centroid = new Point($item['lon'], $item['lat']);
  $info = _geofield_formatter_get_info($geometry, $centroid, TRUE);
  dsm(get_defined_vars());
  if (isset($info['addresse'])) {
    return $info['addresse'];
  }
}

