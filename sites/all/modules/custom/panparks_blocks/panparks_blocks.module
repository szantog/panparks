<?php
/**
 * Implements hook_block_info().
 */
function panparks_blocks_block_info() {
  global $user;

  $blocks['join_now']['info'] = t('Join now');
  // Not worth caching.
  $blocks['join_now']['cache'] = DRUPAL_NO_CACHE;
  $blocks['panparks_twitter']['info'] = t('Twitter Panparks');
  // Not worth caching.
  $blocks['panparks_twitter']['cache'] = DRUPAL_NO_CACHE;

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function panparks_blocks_block_configure($delta = '') {
  $form = null;
  switch ($delta) {
    case 'join_now':
      $form['block_body'] = array(
        '#type' => 'text_format',
        '#base_type' => 'textarea',
        '#title' => t('Body'),
        '#format' => variable_get('panparks_blocks_join_now_format', NULL),
        '#rows' => '10',
        '#default_value' => variable_get('panparks_blocks_join_now_body', ''),
      );
      return $form;
    case 'panparks_twitter':
      $default = variable_get('panparks_blocks_twitter', array());
      $form['twitter_block'] = array(
        '#type' => 'fieldset',
        '#title' => t('Twitter Block Configuration'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
        '#tree' => TRUE,
        '#element_validate' => array('twitter_block_form_validate'),
      );

      $form['twitter_block']['search_string'] = array(
        '#type' => 'textfield',
        '#title' => 'The string or username to search.',
        '#size' => 32,
        '#default_value' => isset($default['search_string']) ? array($default['search_string']) : NULL,
      );

      $form['twitter_block']['search_type'] = array(
        '#type' => 'select',
        '#title' => t('Choose the type of Tweets to return.'),
        '#options' => array(
          'searchHashtag' => t('Tweets mentioning #hashtag or search string.'),
          'getTweetsFrom' => t('Tweets sent from the Twitter user.'),
          'getReplies' => t('Replies to the Twitter user.'),
          'getMentions' => t('Tweets mentioning the Twitter user.'),
        ),
        '#default_value' => isset($default['search_type']) ? array($default['search_type']) : NULL,
      );

      $form['twitter_block']['results_per_page'] = array(
        '#type' => 'textfield',
        '#title' => 'Number of tweets to return',
        '#description' => t('Please enter the number of tweets to return per page up to a maximum of 100.'),
        '#size' => 3,
        '#default_value' => isset($default['results_per_page']) ? array($default['results_per_page']) : NULL,
      );

      $form['twitter_block']['cache_time'] = array(
        '#type' => 'textfield',
        '#title' => 'Block cache time',
        '#description' => t('Add block cache time seconds.'),
        '#size' => 3,
        '#default_value' => isset($default['results_per_page']) ? array($default['results_per_page']) : 300,
      );
  }
  return $form;
}




/**
 * Implements hook_block_save().
 */
function panparks_blocks_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'join_now':
      variable_set('panparks_blocks_join_now_body', $edit['block_body']['value']);
      variable_set('panparks_blocks_join_now_format', $edit['block_body']['format']);
    break;
    case 'panparks_twitter':
      variable_set('panparks_blocks_twitter', $edit['twitter_block']);
    break;
  }
}


/**
 * Implements hook_block_view().
 */
function panparks_blocks_block_view($delta = '') {
  global $user;

  $block = array();

  switch ($delta) {
    case 'join_now':
      $block['subject'] = t('Join now');
      $block['content'][]['#markup'] = check_markup(variable_get('panparks_blocks_join_now_body', ''), variable_get('panparks_blocks_join_now_format', NULL), FALSE);
      if (!$user->uid && !(arg(0) == 'user' && !is_numeric(arg(1)))) {
        $block['content'][]['#markup'] = '<div class="join_now_line"></div>';

        $block['content'][]['#markup'] = '<h3>' . t('Register') . '</h3>';

        $block['content'][] = drupal_get_form('panparks_blocks_register_form');

        $block['content'][]['#markup'] = '<h3>' . t('or login') . '</h3>';
        $user_login_form = drupal_get_form('user_login_block');
        $user_login_form['links']['#markup'] = '';
        $block['content'][] = $user_login_form;
      }
      return $block;
    break;
    case 'panparks_twitter':
      module_load_include( 'php', 'twitter_block', 'twitter.class' );

      $block = array();
      $config = variable_get('panparks_blocks_twitter', array());
      if (!empty($config['search_string'])) {
        $twitter_reply = cache_get('panparks_blocks_twitter', 'cache');

        if($twitter_reply == null){
          $twitter_reply = _panparks_blocks_twitter_refresh($config);
          if ($twitter_reply) {
            $block['content'] = theme('twitter_block', $twitter_reply->results );
          }
        }
        else{
          $twitter_new_reply = FALSE;
          if ((time() - $twitter_reply->created) > $config['cache_time'] ) {
            $twitter_new_reply = _panparks_blocks_twitter_refresh($config);
          }
          if ($twitter_new_reply) {
            $block['content'] = theme('twitter_block', $twitter_new_reply->results );
          }
          else {
            $block['content'] = theme('twitter_block', $twitter_reply->data->results );
          }
        }
      }
      return $block;
    break;
  }
}

function _panparks_blocks_twitter_refresh($config) {
  $twitter = new TwitterSearch($config);
  $twitter_reply = json_decode($twitter->getJSON());
  if (!isset( $twitter_reply -> results) ) {
    watchdog('Panparks Twitter Block', 'Recieved an unexpected reply from Twitter. ' .
                                       'Perhaps just a fail whale? Our search url with query:<br/>' .
                                       '@url_query', array( 'url_query' => $twitter -> url_query),
             WATCHDOG_NOTICE);
  }
  else{
    cache_set('panparks_blocks_twitter', $twitter_reply, 'cache', CACHE_TEMPORARY);
    return $twitter_reply;
  }
  return FALSE;
}


// Front page registration form
function panparks_blocks_register_form($form) {
  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Your e-mail'),
    '#maxlength' => EMAIL_MAX_LENGTH,
    '#size' => 15,
    '#required' => TRUE,
  );

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Register'),
  );
  return $form;
}

function panparks_blocks_register_form_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['mail'])) {
    form_set_error('mail', t('The e-mail address %mail is not valid.', array('%mail' => $form_state['values']['mail'])));
  }
}

function panparks_blocks_register_form_submit($form, &$form_state) {
  // redirect user registration page
  $options = array(
    'query' => array(
      'm' => $form_state['values']['mail'],
    ),
  );
  drupal_goto('get-involved/join-now', $options);
}

/**
 * Implementation of hook_form_user_register_form_alter().
 */
function panparks_blocks_form_user_register_form_alter(&$form, $form_state) {
  // set default user mail address
  $url_param = drupal_get_query_parameters();
  if (isset($url_param['m'])) {
    $form['account']['mail']['#value'] = $url_param['m'];
  }
}

/*
 * Implements hook_block_MODULE_BLOCK_ID_alter
 * Insert hashtag counter into #onemilliontweets block
 */
function panparks_donate_block_view_bean_46_alter(&$data, $block) {
  $data['content']['bean'][46]['hashtag'] = array(
    '#prefix' => '<div class="hashtag-count"><div class="hashtag-count-number">',
    '#suffix' => '</div><div class="hashtag-count-text">' . t('Tweets donated so far') . '</div></div>',
    '#markup' => _get_hashtag_count(),
    '#weight' => 1,
  );
  //$data['content']['bean'][45]['field_image']['#weight'] = 99;
}

/*
 * Implements hook_block_MODULE_BLOCK_ID_alter
 * Insert form after visit page join now block content
 */
function panparks_donate_block_view_bean_48_alter(&$data, $block) {
  $user_login_form = drupal_get_form('user_login_block');
  $user_login_form['links']['#markup'] = '';
  $user_login_form['#action'] = '/what-you-can-do?destination=node/56';
  $data['content']['bean'][48]['form'] = array(
    'register' => array(
      'register_form' => drupal_get_form('panparks_blocks_register_form'),
      '#prefix' => '<h3>' . t('Register') . '</h3>',
    ),
    'login-form' => array(
      'register_form' => $user_login_form,
      '#prefix' => '<h3>' .  t('or login'). '</h3>',
    ),
    '#prefix' => '<div class="join-now-forms clearfix">',
    '#suffix' => '</div>',
    '#weight' => 100,
  );
}

/*
 * Implements hook_block_MODULE_BLOCK_ID_alter
 * Insert forms after front page join now
 */
function panparks_donate_block_view_bean_50_alter(&$data, $block) {
  $user_login_form = drupal_get_form('user_login_block');
  $user_login_form['links']['#markup'] = '';
  $user_login_form['#action'] = '/what-you-can-do?destination=node/56';
  $data['content']['bean'][50]['form'] = array(
    'register' => array(
      'register_form' => drupal_get_form('panparks_blocks_register_form'),
      '#prefix' => '<h3>' . t('Register') . '</h3>',
    ),
    'login-form' => array(
      'register_form' => $user_login_form,
      '#prefix' => '<h3>' .  t('or login'). '</h3>',
    ),
    '#prefix' => '<div class="join-now-forms clearfix">',
    '#suffix' => '</div>',
    '#weight' => 100,
  );
}
